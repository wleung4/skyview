/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/airport.js */ \"./src/scripts/airport.js\");\n/* harmony import */ var _scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/flight.js */ \"./src/scripts/flight.js\");\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n\n\n\nconst searchForm = document.querySelector(\".home-search\");\nconst searchValue = document.querySelector(\"#search\");\nconst searchResults = document.querySelector(\"#search-results\");\nconst flightTable = document.querySelector(\"#flight-table\");\nconst mainPage = document.querySelector(\".main-page\");\nconst background = document.querySelector(\"#background\");\nconst instructions = document.querySelector(\".instructions\");\nconst reset = document.querySelector(\".reset\");\nconst map = document.querySelector(\"#map\");\nconst resetMapPaths = document.querySelector(\".reset-paths\");\nlet departures;\nlet locations;\nlet airportName;\nlet timer = null;\nlet resultClicked = false;\nsearchValue.addEventListener(\"keyup\", () => {\n  clearTimeout(timer);\n  if (!resultClicked) {\n    timer = setTimeout(async () => {\n      if (searchValue.value !== \"\") {\n        const matches = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.search)(searchValue.value);\n        instructions.style.display = \"none\";\n        addResults(matches);\n      } else {\n        searchResults.style.display = \"none\";\n        instructions.style.display = \"block\";\n      }\n    }, 500);\n  }\n  resultClicked = false;\n});\nreset.addEventListener(\"click\", e => {\n  e.preventDefault();\n  mainPage.style.display = \"none\";\n  map.style.display = \"none\";\n  searchForm.style.display = \"flex\";\n  background.style.display = \"inline\";\n  searchValue.value = \"\";\n  searchResults.style.display = \"none\";\n  instructions.style.display = \"block\";\n  reset.style.display = \"none\";\n  resetMapPaths.style.display = \"none\";\n  flightTable.removeChild(flightTable.firstChild);\n  d3.select(\"#map\").select(\"svg\").remove();\n});\nsearchForm.addEventListener(\"submit\", async e => {\n  e.preventDefault();\n  let value = searchValue.value;\n  // airport ICAO\n  if (value === \"\") value = \"N/A\";\n  let airportInfo = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.getAirportInfo)(value);\n  while (!airportInfo) {\n    airportInfo = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.getAirportInfo)(value);\n  }\n  airportName = airportInfo[0];\n  const airportICAO = airportInfo[1];\n  const airportLatitude = airportInfo[2];\n  const airportLongitude = airportInfo[3];\n  searchForm.style.display = 'none';\n  mainPage.style.display = \"flex\";\n  background.style.display = \"none\";\n  reset.style.display = \"block\";\n  map.style.display = \"block\";\n  resetMapPaths.style.display = \"block\";\n\n  // 1 day = 86400, 1 hr = 3600\n  departures = await (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.getAirportDepartures)(airportICAO, (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)(6), (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)());\n\n  // callsign = Plane identifier i.e. DAL767\n  addFlightTable(departures);\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.addMap)([airportLongitude, airportLatitude], airportICAO);\n});\nconst addFlightTable = async info => {\n  let table = document.createElement(\"table\");\n  let tableBody = document.createElement(\"tbody\");\n\n  //top column name row\n  const colRow = document.createElement(\"tr\");\n  colRow.classList.add(\"header\");\n  const callsignCol = document.createElement(\"td\");\n  callsignCol.textContent = \"Plane\";\n  const departureTimeCol = document.createElement(\"td\");\n  departureTimeCol.textContent = \"Time Departed\";\n  const departureAirportCol = document.createElement(\"td\");\n  departureAirportCol.textContent = \"From\";\n  const arrivalAirportCol = document.createElement(\"td\");\n  arrivalAirportCol.textContent = \"To\";\n  colRow.appendChild(callsignCol);\n  colRow.appendChild(departureTimeCol);\n  colRow.appendChild(departureAirportCol);\n  colRow.appendChild(arrivalAirportCol);\n  tableBody.appendChild(colRow);\n\n  // actual data\n  for (let i = 0; i < info.length; i++) {\n    const row = document.createElement(\"tr\");\n    const callsign = document.createElement(\"td\");\n    callsign.textContent = info[i].callsign;\n    callsign.classList.add(\"clickable\");\n\n    // allows clickable planes => gets location info about clicked plane\n    callsign.addEventListener(\"click\", async e => {\n      e.stopPropagation();\n      locations = (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.getFlightLocation)(info[i].icao24);\n      if (locations !== 'No data found') (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.drawPath)(locations, callsign.textContent);\n    });\n    const departureTime = document.createElement(\"td\");\n    const date = new Date(info[i].firstSeen * 1000).toString();\n    console.log(date);\n    departureTime.textContent = date;\n    const departureAirport = document.createElement(\"td\");\n    departureAirport.textContent = info[i].estDepartureAirport;\n    let arrivalAirport = document.createElement(\"td\");\n    if (info[i].estArrivalAirport === null) {\n      arrivalAirport.textContent = \"TBD\";\n    } else {\n      arrivalAirport.textContent = info[i].estArrivalAirport;\n    }\n    row.appendChild(callsign);\n    row.appendChild(departureTime);\n    row.appendChild(departureAirport);\n    row.appendChild(arrivalAirport);\n    tableBody.appendChild(row);\n  }\n  table.appendChild(tableBody);\n  flightTable.appendChild(table);\n  flightTable.classList.add(\"table-style\");\n};\nconst addResults = matches => {\n  while (searchResults.firstChild) {\n    searchResults.removeChild(searchResults.firstChild);\n  }\n  matches.forEach(match => {\n    const result = document.createElement(\"div\");\n    result.textContent = match;\n    result.addEventListener(\"click\", e => {\n      e.stopPropagation();\n      searchValue.value = result.textContent;\n      searchResults.style.display = \"none\";\n      resultClicked = true;\n      instructions.style.display = \"block\";\n    });\n    searchResults.appendChild(result);\n  });\n  if (!resultClicked) {\n    searchResults.style.display = \"block\";\n  }\n};\nresetMapPaths.addEventListener(\"click\", _scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.resetPaths);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/airport.js":
/*!********************************!*\
  !*** ./src/scripts/airport.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAirportInfo: function() { return /* binding */ getAirportInfo; },\n/* harmony export */   getAllAirports: function() { return /* binding */ getAllAirports; },\n/* harmony export */   search: function() { return /* binding */ search; }\n/* harmony export */ });\nconst airports = [];\nlet airportObj;\nconst getAllAirports = async () => {\n  // csv file row = \"country_code\",\"region_name\",\"iata\",\"icao\",\"airport\",\"latitude\",\"longitude\"\n  const res = await fetch('./iata-icao.csv');\n  const data = await res.text();\n  const rows = data.split('\\n').slice(1);\n  rows.forEach(ele => {\n    const row = ele.split(\",\");\n    const country_code = row[0].slice(1, row[0].length - 1);\n    const region_name = row[1].slice(1, row[1].length - 1);\n    const iata = row[2].slice(1, row[2].length - 1);\n    const icao = row[3].slice(1, row[3].length - 1);\n    const airport = row[4].slice(1, row[4].length - 1);\n    const latitude = row[5].slice(1, row[5].length - 1);\n    const longitude = row[6].slice(1, row[6].length - 2);\n    airports.push({\n      airport: airport,\n      country_code: country_code,\n      region_name: region_name,\n      iata: iata,\n      icao: icao,\n      latitude: latitude,\n      longitude: longitude\n    });\n  });\n  // transform array of objects into single object where keys is the airport name\n  airportObj = airports.reduce((obj, item) => Object.assign(obj, {\n    [item.airport]: item\n  }, {}));\n};\nconst getAirportInfo = async airportName => {\n  await getAllAirports();\n  for (const airport in airportObj) {\n    if (airport.toLowerCase() === airportName.toLowerCase()) {\n      return [airport, airportObj[airport].icao, airportObj[airport].latitude, airportObj[airport].longitude];\n    }\n  }\n  return undefined;\n};\nconst search = async input => {\n  await getAllAirports();\n  const results = [];\n  const keys = Object.keys(airportObj).slice(7);\n  keys.forEach(airport => {\n    if (airport.toLowerCase().includes(input.toLowerCase())) {\n      results.push(airport);\n    }\n  });\n  if (results.length === 0) results.push('No Results Found');\n  return results;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLENBQUMsRUFBRTtNQUN4RCxPQUFPLENBQUNYLE9BQU8sRUFBRWpCLFVBQVUsQ0FBQ2lCLE9BQU8sQ0FBQyxDQUFDRCxJQUFJLEVBQUVoQixVQUFVLENBQUNpQixPQUFPLENBQUMsQ0FBQ0MsUUFBUSxFQUFFbEIsVUFBVSxDQUFDaUIsT0FBTyxDQUFDLENBQUNFLFNBQVMsQ0FBQztJQUN4RztFQUNEO0VBQ0EsT0FBT1UsU0FBUztBQUNqQixDQUFDO0FBRU0sTUFBTUMsTUFBTSxHQUFHLE1BQU9DLEtBQUssSUFBSztFQUN0QyxNQUFNOUIsY0FBYyxDQUFDLENBQUM7RUFDdEIsTUFBTStCLE9BQU8sR0FBRyxFQUFFO0VBQ2xCLE1BQU1DLElBQUksR0FBR1QsTUFBTSxDQUFDUyxJQUFJLENBQUNqQyxVQUFVLENBQUMsQ0FBQ1EsS0FBSyxDQUFDLENBQUMsQ0FBQztFQUM3Q3lCLElBQUksQ0FBQ3hCLE9BQU8sQ0FBQ1EsT0FBTyxJQUFJO0lBQ3ZCLElBQUlBLE9BQU8sQ0FBQ1csV0FBVyxDQUFDLENBQUMsQ0FBQ00sUUFBUSxDQUFDSCxLQUFLLENBQUNILFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRTtNQUN4REksT0FBTyxDQUFDWixJQUFJLENBQUNILE9BQU8sQ0FBQztJQUN0QjtFQUNELENBQUMsQ0FBQztFQUNGLElBQUllLE9BQU8sQ0FBQ25CLE1BQU0sS0FBSyxDQUFDLEVBQUVtQixPQUFPLENBQUNaLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztFQUMxRCxPQUFPWSxPQUFPO0FBQ2YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NreXZpZXcvLi9zcmMvc2NyaXB0cy9haXJwb3J0LmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWlycG9ydHMgPSBbXTtcbmxldCBhaXJwb3J0T2JqO1xuZXhwb3J0IGNvbnN0IGdldEFsbEFpcnBvcnRzID0gYXN5bmMgKCkgPT4ge1xuXHQvLyBjc3YgZmlsZSByb3cgPSBcImNvdW50cnlfY29kZVwiLFwicmVnaW9uX25hbWVcIixcImlhdGFcIixcImljYW9cIixcImFpcnBvcnRcIixcImxhdGl0dWRlXCIsXCJsb25naXR1ZGVcIlxuXHRjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnLi9pYXRhLWljYW8uY3N2Jyk7XG5cblx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy50ZXh0KCk7XG5cdGNvbnN0IHJvd3MgPSBkYXRhLnNwbGl0KCdcXG4nKS5zbGljZSgxKTtcblx0cm93cy5mb3JFYWNoKChlbGUpID0+IHtcblx0XHRjb25zdCByb3cgPSBlbGUuc3BsaXQoXCIsXCIpO1xuXHRcdGNvbnN0IGNvdW50cnlfY29kZSA9IHJvd1swXS5zbGljZSgxLCByb3dbMF0ubGVuZ3RoIC0gMSk7XG5cdFx0Y29uc3QgcmVnaW9uX25hbWUgPSByb3dbMV0uc2xpY2UoMSwgcm93WzFdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGlhdGEgPSByb3dbMl0uc2xpY2UoMSwgcm93WzJdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGljYW8gPSByb3dbM10uc2xpY2UoMSwgcm93WzNdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGFpcnBvcnQgPSByb3dbNF0uc2xpY2UoMSwgcm93WzRdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGxhdGl0dWRlID0gcm93WzVdLnNsaWNlKDEsIHJvd1s1XS5sZW5ndGggLSAxKTtcblx0XHRjb25zdCBsb25naXR1ZGUgPSByb3dbNl0uc2xpY2UoMSwgcm93WzZdLmxlbmd0aCAtIDIpO1xuXHRcdGFpcnBvcnRzLnB1c2goe1xuXHRcdFx0YWlycG9ydDogYWlycG9ydCwgY291bnRyeV9jb2RlOiBjb3VudHJ5X2NvZGUsIHJlZ2lvbl9uYW1lOiByZWdpb25fbmFtZSwgaWF0YTogaWF0YSxcblx0XHRcdGljYW86IGljYW8sIGxhdGl0dWRlOiBsYXRpdHVkZSwgbG9uZ2l0dWRlOiBsb25naXR1ZGVcblx0XHR9KTtcblx0fSlcblx0Ly8gdHJhbnNmb3JtIGFycmF5IG9mIG9iamVjdHMgaW50byBzaW5nbGUgb2JqZWN0IHdoZXJlIGtleXMgaXMgdGhlIGFpcnBvcnQgbmFtZVxuXHRhaXJwb3J0T2JqID0gYWlycG9ydHMucmVkdWNlKChvYmosIGl0ZW0pID0+IE9iamVjdC5hc3NpZ24ob2JqLCB7IFtpdGVtLmFpcnBvcnRdOiBpdGVtIH0sIHt9KSk7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRBaXJwb3J0SW5mbyA9IGFzeW5jIChhaXJwb3J0TmFtZSkgPT4ge1xuXHRhd2FpdCBnZXRBbGxBaXJwb3J0cygpO1xuXHRmb3IgKGNvbnN0IGFpcnBvcnQgaW4gYWlycG9ydE9iaikge1xuXHRcdGlmIChhaXJwb3J0LnRvTG93ZXJDYXNlKCkgPT09IGFpcnBvcnROYW1lLnRvTG93ZXJDYXNlKCkpIHtcblx0XHRcdHJldHVybiBbYWlycG9ydCwgYWlycG9ydE9ialthaXJwb3J0XS5pY2FvLCBhaXJwb3J0T2JqW2FpcnBvcnRdLmxhdGl0dWRlLCBhaXJwb3J0T2JqW2FpcnBvcnRdLmxvbmdpdHVkZV07XG5cdFx0fVxuXHR9XG5cdHJldHVybiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjb25zdCBzZWFyY2ggPSBhc3luYyAoaW5wdXQpID0+IHtcblx0YXdhaXQgZ2V0QWxsQWlycG9ydHMoKTtcblx0Y29uc3QgcmVzdWx0cyA9IFtdO1xuXHRjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYWlycG9ydE9iaikuc2xpY2UoNyk7XG5cdGtleXMuZm9yRWFjaChhaXJwb3J0ID0+IHtcblx0XHRpZiAoYWlycG9ydC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGlucHV0LnRvTG93ZXJDYXNlKCkpKSB7XG5cdFx0XHRyZXN1bHRzLnB1c2goYWlycG9ydCk7XG5cdFx0fVxuXHR9KVxuXHRpZiAocmVzdWx0cy5sZW5ndGggPT09IDApIHJlc3VsdHMucHVzaCgnTm8gUmVzdWx0cyBGb3VuZCcpXG5cdHJldHVybiByZXN1bHRzO1xufVxuXG4iXSwibmFtZXMiOlsiYWlycG9ydHMiLCJhaXJwb3J0T2JqIiwiZ2V0QWxsQWlycG9ydHMiLCJyZXMiLCJmZXRjaCIsImRhdGEiLCJ0ZXh0Iiwicm93cyIsInNwbGl0Iiwic2xpY2UiLCJmb3JFYWNoIiwiZWxlIiwicm93IiwiY291bnRyeV9jb2RlIiwibGVuZ3RoIiwicmVnaW9uX25hbWUiLCJpYXRhIiwiaWNhbyIsImFpcnBvcnQiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInB1c2giLCJyZWR1Y2UiLCJvYmoiLCJpdGVtIiwiT2JqZWN0IiwiYXNzaWduIiwiZ2V0QWlycG9ydEluZm8iLCJhaXJwb3J0TmFtZSIsInRvTG93ZXJDYXNlIiwidW5kZWZpbmVkIiwic2VhcmNoIiwiaW5wdXQiLCJyZXN1bHRzIiwia2V5cyIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/airport.js\n");

/***/ }),

/***/ "./src/scripts/flight.js":
/*!*******************************!*\
  !*** ./src/scripts/flight.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateTime: function() { return /* binding */ calculateTime; },\n/* harmony export */   getAircraft: function() { return /* binding */ getAircraft; },\n/* harmony export */   getAirportArrivals: function() { return /* binding */ getAirportArrivals; },\n/* harmony export */   getAirportDepartures: function() { return /* binding */ getAirportDepartures; },\n/* harmony export */   getAllFlights: function() { return /* binding */ getAllFlights; },\n/* harmony export */   getFlightLocation: function() { return /* binding */ getFlightLocation; }\n/* harmony export */ });\nlet allFlights;\nlet arrivalFlights;\nlet departureFlights;\nlet aircraftFlights;\nlet flightLocations;\nconst url = \"https://opensky-network.org/api/flights/\";\n\n// track gives back last reported location of an airplane\nconst getFlightLocation = async function (icao24) {\n  let time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  try {\n    const res = await fetch(`https://opensky-network.org/api/tracks/all?icao24=${icao24}&time=${time}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      return data.path;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n// Get all flights between time frame < 2 hrs\nconst getAllFlights = async (begin, end) => {\n  // beginning and ending in unix time, seconds since epoch\n  try {\n    const res = await fetch(url + `all?begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      allFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n\n// Get flight information for aircraft departed and arrived within time frame < 30 days, \nconst getAircraft = async (icao24, begin, end) => {\n  try {\n    const res = await fetch(url + `aircraft?icao24=${icao24}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      aircraftFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching aircraft', error);\n  }\n};\n\n// Get all airport arrivals at specific airport, time frame < 1 week, arrival data from previous day or earlier\nconst getAirportArrivals = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `arrival?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      arrivalFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching arrivals', error);\n  }\n};\n\n// Get all flight depatures at specific airport, time frame < 1 week, ALWAYS UP TO DATE\nconst getAirportDepartures = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `departure?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      departureFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching departures', error);\n  }\n};\n\n// convert user input time in hrs\nconst calculateTime = function () {\n  let time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return Math.floor(new Date() / 1000) - time * 3600;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/flight.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMap: function() { return /* binding */ addMap; },\n/* harmony export */   drawPath: function() { return /* binding */ drawPath; },\n/* harmony export */   resetPaths: function() { return /* binding */ resetPaths; }\n/* harmony export */ });\nlet g;\nlet projection;\nlet airportLocation;\nconst addMap = (location, icao) => {\n  const height = 600;\n  const width = 800;\n  const svg = d3.select('#map').append('svg').attr('width', width).attr('height', height);\n  g = svg.append('g');\n  const handleZoom = e => {\n    g.attr('transform', e.transform);\n  };\n  let zoom = d3.zoom().scaleExtent([1, 80]).translateExtent([[0, 0], [width, height]]).on('zoom', handleZoom);\n  svg.call(zoom);\n  projection = d3.geoMercator().center([location[0], location[1]]).translate([width / 2, height / 2]).scale(120);\n  zoom.scaleTo(svg, 20);\n  const path = d3.geoPath().projection(projection);\n  d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json').then(data => {\n    const countries = topojson.feature(data, data.objects.countries);\n    const coordinates = projection(location);\n    airportLocation = coordinates;\n    g.selectAll('path').data(countries.features).enter().append('path').attr('d', path);\n    g.selectAll('circle').data(location).enter().append('circle').attr('cx', coordinates[0]).attr('cy', coordinates[1]).attr('r', .25).style('fill', 'yellow');\n    g.selectAll('text').data(location).enter().append('text').attr('x', coordinates[0] + .5).attr('y', coordinates[1]).text(icao).style('font-size', '1px').style('stroke', 'blue');\n  });\n};\nconst drawPath = async (path, plane) => {\n  // [time, latitude, longitude, baro_altitude, true_track, on_ground]\n  const coordinates = [];\n  coordinates.push(airportLocation);\n  const waypoints = await path;\n  waypoints.forEach(waypoint => {\n    coordinates.push(projection([waypoint[2], waypoint[1]]));\n  });\n\n  // path using line\n  const lineGenerator = d3.line().x(d => d[0]).y(d => d[1]);\n  g.append('path').data([coordinates]).attr('fill', 'none').style('stroke', '#9c180c').style('stroke-width', 0.1).attr('d', lineGenerator).attr('class', 'flight-path');\n  const lastLocation = coordinates[coordinates.length - 1];\n  const lastAngle = waypoints[waypoints.length - 1][4];\n  //const landed = waypoints[waypoints.length - 1][5];\n\n  g.append('image').attr('xlink:href', './assets/plane.png') // ../../assets/plane.png\n  .attr('width', 1.5).attr('height', 1.5).attr('x', lastLocation[0] - .75).attr('y', lastLocation[1] - .75).attr('transform', `rotate(${lastAngle}, ${lastLocation[0]}, ${lastLocation[1]})`).attr('class', 'flight-image');\n  g.append('text').attr('x', lastLocation[0] + .75).attr('y', lastLocation[1] + .75).text(plane) // `${plane} landed: ${landed}`\n  .style('font-size', '.75px').style('stroke', 'purple').attr('class', 'flight-text');\n};\nconst resetPaths = () => {\n  g.selectAll('.flight-path').remove();\n  g.selectAll('.flight-image').remove();\n  g.selectAll('.flight-text').remove();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3l2aWV3Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;