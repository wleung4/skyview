/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/airport.js */ \"./src/scripts/airport.js\");\n/* harmony import */ var _scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/flight.js */ \"./src/scripts/flight.js\");\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n\n\n\nconst searchForm = document.querySelector(\".home-search\");\nconst searchValue = document.getElementById(\"search\");\nconst flightTable = document.getElementById(\"flight-table\");\nconst mainPage = document.querySelector(\".main-page\");\nconst background = document.querySelector(\"#background\");\nlet departures;\nlet arrivals;\nsearchForm.addEventListener(\"submit\", async e => {\n  e.preventDefault();\n  const value = searchValue.value;\n  searchForm.style.display = 'none';\n  mainPage.style.display = \"flex\";\n  background.style.display = \"none\";\n\n  // airport ICAO\n  const airportICAO = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.getAirportICAO)(value);\n\n  // 1 day = 86400, 1 hr = 3600\n  departures = await (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.getAirportDepartures)(airportICAO, (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)() - 3600, (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)());\n  console.log(\"Airport Departures from past hr to now: \", departures);\n\n  //console.log(\"Departures: \");\n  // callsign = Plane identifier i.e. DAL767\n  //departures.forEach(departure => console.log(`Plane number: ${departure.callsign}`, `ICAO: ${departure.icao24}`));\n\n  //console.log(departures);\n  addFlightTable(departures);\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.addMap)();\n  // get arrival aircraft info for past day\n  //arrivals = await getAirportArrivals(airportICAO, calculateTime() - 86400*2, calculateTime());\n  // console.log(\"Airport Arrivals from 2 days ago:\", arrivals);\n\n  // console.log(\"Arrivals: \");\n  // arrivals.forEach(arrival => console.log(`Plane number: ${arrival.callsign}`, `ICAO: ${arrival.icao24}`));\n\n  // console.log(\"Arrivals Aircraft info for past 2 days:\")\n  // for(let i = 0; i < arrivals.length; i++){\n  // \tconst info = await getAircraft(arrivals[i].icao24, calculateTime() - 86400*2, calculateTime());\n  // }\n});\n\nconst addFlightTable = async info => {\n  let table = document.createElement(\"table\");\n  let tableBody = document.createElement(\"tbody\");\n\n  //top column name row\n  const colRow = document.createElement(\"tr\");\n  colRow.classList.add(\"header\");\n  const callsignCol = document.createElement(\"td\");\n  callsignCol.textContent = \"Plane\";\n  const departureTimeCol = document.createElement(\"td\");\n  departureTimeCol.textContent = \"Time Departed\";\n  const departureAirportCol = document.createElement(\"td\");\n  departureAirportCol.textContent = \"From\";\n  const arrivalAirportCol = document.createElement(\"td\");\n  arrivalAirportCol.textContent = \"To\";\n  colRow.appendChild(callsignCol);\n  colRow.appendChild(departureTimeCol);\n  colRow.appendChild(departureAirportCol);\n  colRow.appendChild(arrivalAirportCol);\n  tableBody.appendChild(colRow);\n\n  // actual data\n  for (let i = 0; i < info.length; i++) {\n    const row = document.createElement(\"tr\");\n    const callsign = document.createElement(\"td\");\n    callsign.textContent = info[i].callsign;\n    const departureTime = document.createElement(\"td\");\n    const date = new Date(info[i].firstSeen * 1000).toString();\n    departureTime.textContent = date.slice(0, 28);\n    const departureAirport = document.createElement(\"td\");\n    departureAirport.textContent = info[i].estDepartureAirport;\n    let arrivalAirport = document.createElement(\"td\");\n    if (info[i].estArrivalAirport === null) {\n      arrivalAirport.textContent = \"TBD\";\n    } else {\n      arrivalAirport.textContent = info[i].estArrivalAirport;\n    }\n    row.appendChild(callsign);\n    row.appendChild(departureTime);\n    row.appendChild(departureAirport);\n    row.appendChild(arrivalAirport);\n    tableBody.appendChild(row);\n  }\n  table.appendChild(tableBody);\n  flightTable.appendChild(table);\n  flightTable.classList.add(\"table-style\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/airport.js":
/*!********************************!*\
  !*** ./src/scripts/airport.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAirportICAO: function() { return /* binding */ getAirportICAO; }\n/* harmony export */ });\nconst getAirportICAO = async airportName => {\n  const airports = [];\n  // \"country_code\",\"region_name\",\"iata\",\"icao\",\"airport\",\"latitude\",\"longitude\"\n  const res = await fetch('../iata-icao.csv');\n  const data = await res.text();\n  const rows = data.split('\\n').slice(1);\n  rows.forEach(ele => {\n    const row = ele.split(\",\");\n    const country_code = row[0].slice(1, row[0].length - 1);\n    const region_name = row[1].slice(1, row[1].length - 1);\n    const iata = row[2].slice(1, row[2].length - 1);\n    const icao = row[3].slice(1, row[3].length - 1);\n    const airport = row[4].slice(1, row[4].length - 1);\n    const latitude = row[5].slice(1, row[5].length - 1);\n    const longitude = row[6].slice(1, row[6].length - 2);\n    airports.push({\n      airport: airport,\n      country_code: country_code,\n      region_name: region_name,\n      iata: iata,\n      icao: icao,\n      latitude: latitude,\n      longitude: longitude\n    });\n  });\n\n  // transform array of objects into single object where keys is the airport name\n  const airportObj = airports.reduce((obj, item) => Object.assign(obj, {\n    [item.airport]: item\n  }, {}));\n  //console.log(airportObj[airportName].icao); // search for airport using airport name key, can key into\n  return airportObj[airportName].icao;\n};\n\n//getAirportICAO(\"Oakland International Airport\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9haXJwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxjQUFjLEdBQUcsTUFBT0MsV0FBVyxJQUFLO0VBQ3BELE1BQU1DLFFBQVEsR0FBRyxFQUFFO0VBQ25CO0VBQ0EsTUFBTUMsR0FBRyxHQUFHLE1BQU1DLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztFQUMzQyxNQUFNQyxJQUFJLEdBQUcsTUFBTUYsR0FBRyxDQUFDRyxJQUFJLENBQUMsQ0FBQztFQUM3QixNQUFNQyxJQUFJLEdBQUdGLElBQUksQ0FBQ0csS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBRXRDRixJQUFJLENBQUNHLE9BQU8sQ0FBRUMsR0FBRyxJQUFHO0lBQ25CLE1BQU1DLEdBQUcsR0FBR0QsR0FBRyxDQUFDSCxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQzFCLE1BQU1LLFlBQVksR0FBR0QsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDSCxLQUFLLENBQUMsQ0FBQyxFQUFFRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNFLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDdkQsTUFBTUMsV0FBVyxHQUFHSCxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNILEtBQUssQ0FBQyxDQUFDLEVBQUVHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUN0RCxNQUFNRSxJQUFJLEdBQUdKLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0gsS0FBSyxDQUFDLENBQUMsRUFBRUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQy9DLE1BQU1HLElBQUksR0FBR0wsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDSCxLQUFLLENBQUMsQ0FBQyxFQUFFRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNFLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDL0MsTUFBTUksT0FBTyxHQUFHTixHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNILEtBQUssQ0FBQyxDQUFDLEVBQUVHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNsRCxNQUFNSyxRQUFRLEdBQUdQLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0gsS0FBSyxDQUFDLENBQUMsRUFBRUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ25ELE1BQU1NLFNBQVMsR0FBR1IsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDSCxLQUFLLENBQUMsQ0FBQyxFQUFFRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNFLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDcERaLFFBQVEsQ0FBQ21CLElBQUksQ0FBQztNQUFDSCxPQUFPLEVBQUVBLE9BQU87TUFBQ0wsWUFBWSxFQUFFQSxZQUFZO01BQUVFLFdBQVcsRUFBRUEsV0FBVztNQUFFQyxJQUFJLEVBQUVBLElBQUk7TUFDL0ZDLElBQUksRUFBRUEsSUFBSTtNQUFFRSxRQUFRLEVBQUVBLFFBQVE7TUFBRUMsU0FBUyxFQUFFQTtJQUFTLENBQUMsQ0FBQztFQUN4RCxDQUFDLENBQUM7O0VBRUY7RUFDQSxNQUFNRSxVQUFVLEdBQUdwQixRQUFRLENBQUNxQixNQUFNLENBQUMsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEtBQUtDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDSCxHQUFHLEVBQUU7SUFBQyxDQUFDQyxJQUFJLENBQUNQLE9BQU8sR0FBRU87RUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNoRztFQUNBLE9BQU9ILFVBQVUsQ0FBQ3JCLFdBQVcsQ0FBQyxDQUFDZ0IsSUFBSTtBQUNwQyxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2t5dmlldy8uL3NyYy9zY3JpcHRzL2FpcnBvcnQuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0QWlycG9ydElDQU8gPSBhc3luYyAoYWlycG9ydE5hbWUpID0+IHtcblx0Y29uc3QgYWlycG9ydHMgPSBbXTtcblx0Ly8gXCJjb3VudHJ5X2NvZGVcIixcInJlZ2lvbl9uYW1lXCIsXCJpYXRhXCIsXCJpY2FvXCIsXCJhaXJwb3J0XCIsXCJsYXRpdHVkZVwiLFwibG9uZ2l0dWRlXCJcblx0Y29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJy4uL2lhdGEtaWNhby5jc3YnKTtcblx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy50ZXh0KCk7XG5cdGNvbnN0IHJvd3MgPSBkYXRhLnNwbGl0KCdcXG4nKS5zbGljZSgxKTtcblxuXHRyb3dzLmZvckVhY2goKGVsZSk9Pntcblx0XHRjb25zdCByb3cgPSBlbGUuc3BsaXQoXCIsXCIpO1xuXHRcdGNvbnN0IGNvdW50cnlfY29kZSA9IHJvd1swXS5zbGljZSgxLCByb3dbMF0ubGVuZ3RoIC0gMSk7XG5cdFx0Y29uc3QgcmVnaW9uX25hbWUgPSByb3dbMV0uc2xpY2UoMSwgcm93WzFdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGlhdGEgPSByb3dbMl0uc2xpY2UoMSwgcm93WzJdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGljYW8gPSByb3dbM10uc2xpY2UoMSwgcm93WzNdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGFpcnBvcnQgPSByb3dbNF0uc2xpY2UoMSwgcm93WzRdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGxhdGl0dWRlID0gcm93WzVdLnNsaWNlKDEsIHJvd1s1XS5sZW5ndGggLSAxKTtcblx0XHRjb25zdCBsb25naXR1ZGUgPSByb3dbNl0uc2xpY2UoMSwgcm93WzZdLmxlbmd0aCAtIDIpO1xuXHRcdGFpcnBvcnRzLnB1c2goe2FpcnBvcnQ6IGFpcnBvcnQsY291bnRyeV9jb2RlOiBjb3VudHJ5X2NvZGUsIHJlZ2lvbl9uYW1lOiByZWdpb25fbmFtZSwgaWF0YTogaWF0YSwgXG5cdFx0XHRpY2FvOiBpY2FvLCBsYXRpdHVkZTogbGF0aXR1ZGUsIGxvbmdpdHVkZTogbG9uZ2l0dWRlfSk7XG5cdH0pXG5cblx0Ly8gdHJhbnNmb3JtIGFycmF5IG9mIG9iamVjdHMgaW50byBzaW5nbGUgb2JqZWN0IHdoZXJlIGtleXMgaXMgdGhlIGFpcnBvcnQgbmFtZVxuXHRjb25zdCBhaXJwb3J0T2JqID0gYWlycG9ydHMucmVkdWNlKChvYmosIGl0ZW0pID0+IE9iamVjdC5hc3NpZ24ob2JqLCB7W2l0ZW0uYWlycG9ydF06aXRlbX0sIHt9KSk7XG5cdC8vY29uc29sZS5sb2coYWlycG9ydE9ialthaXJwb3J0TmFtZV0uaWNhbyk7IC8vIHNlYXJjaCBmb3IgYWlycG9ydCB1c2luZyBhaXJwb3J0IG5hbWUga2V5LCBjYW4ga2V5IGludG9cblx0cmV0dXJuIGFpcnBvcnRPYmpbYWlycG9ydE5hbWVdLmljYW87XG59XG5cbi8vZ2V0QWlycG9ydElDQU8oXCJPYWtsYW5kIEludGVybmF0aW9uYWwgQWlycG9ydFwiKTtcblxuXG5cbiJdLCJuYW1lcyI6WyJnZXRBaXJwb3J0SUNBTyIsImFpcnBvcnROYW1lIiwiYWlycG9ydHMiLCJyZXMiLCJmZXRjaCIsImRhdGEiLCJ0ZXh0Iiwicm93cyIsInNwbGl0Iiwic2xpY2UiLCJmb3JFYWNoIiwiZWxlIiwicm93IiwiY291bnRyeV9jb2RlIiwibGVuZ3RoIiwicmVnaW9uX25hbWUiLCJpYXRhIiwiaWNhbyIsImFpcnBvcnQiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInB1c2giLCJhaXJwb3J0T2JqIiwicmVkdWNlIiwib2JqIiwiaXRlbSIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/airport.js\n");

/***/ }),

/***/ "./src/scripts/flight.js":
/*!*******************************!*\
  !*** ./src/scripts/flight.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateTime: function() { return /* binding */ calculateTime; },\n/* harmony export */   getAircraft: function() { return /* binding */ getAircraft; },\n/* harmony export */   getAirportArrivals: function() { return /* binding */ getAirportArrivals; },\n/* harmony export */   getAirportDepartures: function() { return /* binding */ getAirportDepartures; },\n/* harmony export */   getAllFlights: function() { return /* binding */ getAllFlights; },\n/* harmony export */   getFlightLocation: function() { return /* binding */ getFlightLocation; }\n/* harmony export */ });\nlet allFlights;\nlet arrivalFlights;\nlet departureFlights;\nlet aircraftFlights;\nlet flightLocations;\nconst url = \"https://opensky-network.org/api/flights/\";\n\n// track gives back last reported location of an airplane\nconst getFlightLocation = async function (icao24) {\n  let time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  try {\n    const res = await fetch(`https://opensky-network.org/api/tracks/all?icao24=${icao24}&time=${time}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      const lastLocation = data.path[data.path.length - 1];\n      console.log(lastLocation);\n      console.log(\"Latitude:\", lastLocation[1]);\n      console.log(\"Longitude:\", lastLocation[2]);\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n// Get all flights between time frame < 2 hrs\nconst getAllFlights = async (begin, end) => {\n  // beginning and ending in unix time, seconds since epoch\n  try {\n    const res = await fetch(url + `all?begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n        //'Access-Control-Allow-Origin': '*',\n        //'mode': 'no-cors'\n      }\n    });\n\n    if (res.ok) {\n      const data = await res.json();\n      console.log('all flights');\n      console.log(data);\n      allFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n\n// Get flight information for aircraft departed and arrived within time frame < 30 days, \nconst getAircraft = async (icao24, begin, end) => {\n  try {\n    const res = await fetch(url + `aircraft?icao24=${icao24}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      //console.log('aircraft:');\n      //console.log(data);\n      aircraftFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching aircraft', error);\n  }\n};\n\n// Get all airport arrivals at specific airport, time frame < 1 week, arrival data from previous day or earlier\nconst getAirportArrivals = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `arrival?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      //console.log('arrivals:');\n      //console.log(data);\n      arrivalFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching arrivals', error);\n  }\n};\n\n// Get all flight depatures at specific airport, time frame < 1 week, ALWAYS UP TO DATE\nconst getAirportDepartures = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `departure?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      //console.log('departures:'); \n      //console.log(data);\n      departureFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching departures', error);\n  }\n};\n\n// convert user input time\nconst calculateTime = () => {\n  return Math.floor(new Date() / 1000);\n};\n\n// getFlightLocation('ac3a60');\n// const airport = 'KSFO';\n// const begin = 1690090801;\n// const end = 1690177414;\n\n// const start = 1689445822;\n// const plane = 'a6f5b5'; \n\n// getAllFlights(begin, end);\n// getAirportArrivals(airport, start, end);\n// getAirportDepartures(airport, begin, end);\n// getAircraft(plane, start, end);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/flight.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMap: function() { return /* binding */ addMap; }\n/* harmony export */ });\nconst addMap = () => {\n  const height = 600;\n  const width = 800;\n  const svg = d3.select('#map').append('svg').attr('width', width).attr('height', height);\n  const projection = d3.geoMercator().translate([width / 2, height / 1.35]).scale(140);\n  const path = d3.geoPath().projection(projection);\n  d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json').then(data => {\n    const countries = topojson.feature(data, data.objects.countries);\n    svg.selectAll('path').data(countries.features).enter().append('path').attr('d', path);\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLE1BQU0sR0FBR0EsQ0FBQSxLQUFNO0VBQzNCLE1BQU1DLE1BQU0sR0FBRyxHQUFHO0VBQ2xCLE1BQU1DLEtBQUssR0FBRyxHQUFHO0VBRWpCLE1BQU1DLEdBQUcsR0FBR0MsRUFBRSxDQUFDQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQzNCQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQ2JDLElBQUksQ0FBQyxPQUFPLEVBQUVMLEtBQUssQ0FBQyxDQUNwQkssSUFBSSxDQUFDLFFBQVEsRUFBRU4sTUFBTSxDQUFDO0VBRXhCLE1BQU1PLFVBQVUsR0FBR0osRUFBRSxDQUFDSyxXQUFXLENBQUMsQ0FBQyxDQUNqQ0MsU0FBUyxDQUFDLENBQUNSLEtBQUssR0FBRyxDQUFDLEVBQUVELE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUNyQ1UsS0FBSyxDQUFDLEdBQUcsQ0FBQztFQUVaLE1BQU1DLElBQUksR0FBR1IsRUFBRSxDQUFDUyxPQUFPLENBQUMsQ0FBQyxDQUN2QkwsVUFBVSxDQUFDQSxVQUFVLENBQUM7RUFFeEJKLEVBQUUsQ0FBQ1UsSUFBSSxDQUFDLGdFQUFnRSxDQUFDLENBQ3ZFQyxJQUFJLENBQUNDLElBQUksSUFBSTtJQUNiLE1BQU1DLFNBQVMsR0FBR0MsUUFBUSxDQUFDQyxPQUFPLENBQUNILElBQUksRUFBRUEsSUFBSSxDQUFDSSxPQUFPLENBQUNILFNBQVMsQ0FBQztJQUVoRWQsR0FBRyxDQUFDa0IsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUNuQkwsSUFBSSxDQUFDQyxTQUFTLENBQUNLLFFBQVEsQ0FBQyxDQUN4QkMsS0FBSyxDQUFDLENBQUMsQ0FDUGpCLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FDZEMsSUFBSSxDQUFDLEdBQUcsRUFBRUssSUFBSSxDQUFDO0VBQ2xCLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3l2aWV3Ly4vc3JjL3NjcmlwdHMvbWFwLmpzP2Y1NmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGFkZE1hcCA9ICgpID0+IHtcblx0Y29uc3QgaGVpZ2h0ID0gNjAwO1xuXHRjb25zdCB3aWR0aCA9IDgwMDtcblxuXHRjb25zdCBzdmcgPSBkMy5zZWxlY3QoJyNtYXAnKVxuXHRcdC5hcHBlbmQoJ3N2ZycpXG5cdFx0LmF0dHIoJ3dpZHRoJywgd2lkdGgpXG5cdFx0LmF0dHIoJ2hlaWdodCcsIGhlaWdodCk7XG5cblx0Y29uc3QgcHJvamVjdGlvbiA9IGQzLmdlb01lcmNhdG9yKClcblx0XHQudHJhbnNsYXRlKFt3aWR0aCAvIDIsIGhlaWdodCAvIDEuMzVdKVxuXHRcdC5zY2FsZSgxNDApO1xuXHRcblx0Y29uc3QgcGF0aCA9IGQzLmdlb1BhdGgoKVxuXHRcdC5wcm9qZWN0aW9uKHByb2plY3Rpb24pO1xuXG5cdGQzLmpzb24oJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vd29ybGQtYXRsYXNAMi9jb3VudHJpZXMtMTEwbS5qc29uJylcblx0XHQudGhlbihkYXRhID0+IHtcblx0XHRcdGNvbnN0IGNvdW50cmllcyA9IHRvcG9qc29uLmZlYXR1cmUoZGF0YSwgZGF0YS5vYmplY3RzLmNvdW50cmllcyk7XG5cblx0XHRcdHN2Zy5zZWxlY3RBbGwoJ3BhdGgnKVxuXHRcdFx0XHQuZGF0YShjb3VudHJpZXMuZmVhdHVyZXMpXG5cdFx0XHRcdC5lbnRlcigpXG5cdFx0XHRcdC5hcHBlbmQoJ3BhdGgnKVxuXHRcdFx0XHQuYXR0cignZCcsIHBhdGgpXG5cdFx0fSk7XG59Il0sIm5hbWVzIjpbImFkZE1hcCIsImhlaWdodCIsIndpZHRoIiwic3ZnIiwiZDMiLCJzZWxlY3QiLCJhcHBlbmQiLCJhdHRyIiwicHJvamVjdGlvbiIsImdlb01lcmNhdG9yIiwidHJhbnNsYXRlIiwic2NhbGUiLCJwYXRoIiwiZ2VvUGF0aCIsImpzb24iLCJ0aGVuIiwiZGF0YSIsImNvdW50cmllcyIsInRvcG9qc29uIiwiZmVhdHVyZSIsIm9iamVjdHMiLCJzZWxlY3RBbGwiLCJmZWF0dXJlcyIsImVudGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3l2aWV3Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;