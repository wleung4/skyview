/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/airport.js */ \"./src/scripts/airport.js\");\n/* harmony import */ var _scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/flight.js */ \"./src/scripts/flight.js\");\n/* harmony import */ var _scripts_map_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/map.js */ \"./src/scripts/map.js\");\n\n\n\nconst searchForm = document.querySelector(\".home-search\");\nconst searchValue = document.getElementById(\"search\");\nconst flightTable = document.getElementById(\"flight-table\");\nconst mainPage = document.querySelector(\".main-page\");\nconst background = document.querySelector(\"#background\");\nlet departures;\nlet arrivals;\nlet locations;\nsearchForm.addEventListener(\"submit\", async e => {\n  e.preventDefault();\n  const value = searchValue.value;\n  // airport ICAO\n  if (value === \"\") value = \"N/A\";\n  let airportInfo = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.getAirportInfo)(value);\n  while (!airportInfo) {\n    airportInfo = await (0,_scripts_airport_js__WEBPACK_IMPORTED_MODULE_0__.getAirportInfo)(value);\n  }\n  const airportICAO = airportInfo[0];\n  const airportLatitude = airportInfo[1];\n  const airportLongitude = airportInfo[2];\n  searchForm.style.display = 'none';\n  mainPage.style.display = \"flex\";\n  background.style.display = \"none\";\n\n  // 1 day = 86400, 1 hr = 3600\n  departures = await (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.getAirportDepartures)(airportICAO, (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)() - 3600 * 4, (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.calculateTime)());\n  console.log(\"Airport Departures from past 4 hrs to now: \", departures);\n\n  // callsign = Plane identifier i.e. DAL767\n  addFlightTable(departures);\n  (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.addMap)([airportLongitude, airportLatitude], airportICAO);\n  // get arrival aircraft info for past day\n  //arrivals = await getAirportArrivals(airportICAO, calculateTime() - 86400*2, calculateTime());\n  // console.log(\"Airport Arrivals from 2 days ago:\", arrivals);\n\n  // console.log(\"Arrivals: \");\n  // arrivals.forEach(arrival => console.log(`Plane number: ${arrival.callsign}`, `ICAO: ${arrival.icao24}`));\n\n  // console.log(\"Arrivals Aircraft info for past 2 days:\")\n  // for(let i = 0; i < arrivals.length; i++){\n  // \tconst info = await getAircraft(arrivals[i].icao24, calculateTime() - 86400*2, calculateTime());\n  // }\n});\n\nconst addFlightTable = async info => {\n  let table = document.createElement(\"table\");\n  let tableBody = document.createElement(\"tbody\");\n\n  //top column name row\n  const colRow = document.createElement(\"tr\");\n  colRow.classList.add(\"header\");\n  const callsignCol = document.createElement(\"td\");\n  callsignCol.textContent = \"Plane\";\n  const departureTimeCol = document.createElement(\"td\");\n  departureTimeCol.textContent = \"Time Departed\";\n  const departureAirportCol = document.createElement(\"td\");\n  departureAirportCol.textContent = \"From\";\n  const arrivalAirportCol = document.createElement(\"td\");\n  arrivalAirportCol.textContent = \"To\";\n  colRow.appendChild(callsignCol);\n  colRow.appendChild(departureTimeCol);\n  colRow.appendChild(departureAirportCol);\n  colRow.appendChild(arrivalAirportCol);\n  tableBody.appendChild(colRow);\n\n  // actual data\n  for (let i = 0; i < info.length; i++) {\n    const row = document.createElement(\"tr\");\n    const callsign = document.createElement(\"td\");\n    callsign.textContent = info[i].callsign;\n    callsign.classList.add(\"clickable\");\n\n    // allows clickable planes => gets location info about clicked plane\n    callsign.addEventListener(\"click\", async e => {\n      e.stopPropagation();\n      locations = (0,_scripts_flight_js__WEBPACK_IMPORTED_MODULE_1__.getFlightLocation)(info[i].icao24);\n      //console.log(locations);\n      (0,_scripts_map_js__WEBPACK_IMPORTED_MODULE_2__.drawPath)(locations);\n    });\n    const departureTime = document.createElement(\"td\");\n    const date = new Date(info[i].firstSeen * 1000).toString();\n    departureTime.textContent = date.slice(0, 28);\n    const departureAirport = document.createElement(\"td\");\n    departureAirport.textContent = info[i].estDepartureAirport;\n    let arrivalAirport = document.createElement(\"td\");\n    if (info[i].estArrivalAirport === null) {\n      arrivalAirport.textContent = \"TBD\";\n    } else {\n      arrivalAirport.textContent = info[i].estArrivalAirport;\n    }\n    row.appendChild(callsign);\n    row.appendChild(departureTime);\n    row.appendChild(departureAirport);\n    row.appendChild(arrivalAirport);\n    tableBody.appendChild(row);\n  }\n  table.appendChild(tableBody);\n  flightTable.appendChild(table);\n  flightTable.classList.add(\"table-style\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/airport.js":
/*!********************************!*\
  !*** ./src/scripts/airport.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAirportInfo: function() { return /* binding */ getAirportInfo; }\n/* harmony export */ });\nconst getAirportInfo = async airportName => {\n  const airports = [];\n  // \"country_code\",\"region_name\",\"iata\",\"icao\",\"airport\",\"latitude\",\"longitude\"\n  const res = await fetch('../iata-icao.csv');\n  const data = await res.text();\n  const rows = data.split('\\n').slice(1);\n  rows.forEach(ele => {\n    const row = ele.split(\",\");\n    const country_code = row[0].slice(1, row[0].length - 1);\n    const region_name = row[1].slice(1, row[1].length - 1);\n    const iata = row[2].slice(1, row[2].length - 1);\n    const icao = row[3].slice(1, row[3].length - 1);\n    const airport = row[4].slice(1, row[4].length - 1);\n    const latitude = row[5].slice(1, row[5].length - 1);\n    const longitude = row[6].slice(1, row[6].length - 2);\n    airports.push({\n      airport: airport,\n      country_code: country_code,\n      region_name: region_name,\n      iata: iata,\n      icao: icao,\n      latitude: latitude,\n      longitude: longitude\n    });\n  });\n\n  // transform array of objects into single object where keys is the airport name\n  const airportObj = airports.reduce((obj, item) => Object.assign(obj, {\n    [item.airport]: item\n  }, {}));\n  //console.log(airportObj); // search for airport using airport name key, can key into\n\n  if (airportObj[airportName]) {\n    return [airportObj[airportName].icao, airportObj[airportName].latitude, airportObj[airportName].longitude];\n  } else {\n    return undefined;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsTUFBTTtJQUNOLE9BQU9RLFNBQVM7RUFDakI7QUFDRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2t5dmlldy8uL3NyYy9zY3JpcHRzL2FpcnBvcnQuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0QWlycG9ydEluZm8gPSBhc3luYyAoYWlycG9ydE5hbWUpID0+IHtcblx0Y29uc3QgYWlycG9ydHMgPSBbXTtcblx0Ly8gXCJjb3VudHJ5X2NvZGVcIixcInJlZ2lvbl9uYW1lXCIsXCJpYXRhXCIsXCJpY2FvXCIsXCJhaXJwb3J0XCIsXCJsYXRpdHVkZVwiLFwibG9uZ2l0dWRlXCJcblx0Y29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJy4uL2lhdGEtaWNhby5jc3YnKTtcblx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy50ZXh0KCk7XG5cdGNvbnN0IHJvd3MgPSBkYXRhLnNwbGl0KCdcXG4nKS5zbGljZSgxKTtcblxuXHRyb3dzLmZvckVhY2goKGVsZSk9Pntcblx0XHRjb25zdCByb3cgPSBlbGUuc3BsaXQoXCIsXCIpO1xuXHRcdGNvbnN0IGNvdW50cnlfY29kZSA9IHJvd1swXS5zbGljZSgxLCByb3dbMF0ubGVuZ3RoIC0gMSk7XG5cdFx0Y29uc3QgcmVnaW9uX25hbWUgPSByb3dbMV0uc2xpY2UoMSwgcm93WzFdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGlhdGEgPSByb3dbMl0uc2xpY2UoMSwgcm93WzJdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGljYW8gPSByb3dbM10uc2xpY2UoMSwgcm93WzNdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGFpcnBvcnQgPSByb3dbNF0uc2xpY2UoMSwgcm93WzRdLmxlbmd0aCAtIDEpO1xuXHRcdGNvbnN0IGxhdGl0dWRlID0gcm93WzVdLnNsaWNlKDEsIHJvd1s1XS5sZW5ndGggLSAxKTtcblx0XHRjb25zdCBsb25naXR1ZGUgPSByb3dbNl0uc2xpY2UoMSwgcm93WzZdLmxlbmd0aCAtIDIpO1xuXHRcdGFpcnBvcnRzLnB1c2goe2FpcnBvcnQ6IGFpcnBvcnQsY291bnRyeV9jb2RlOiBjb3VudHJ5X2NvZGUsIHJlZ2lvbl9uYW1lOiByZWdpb25fbmFtZSwgaWF0YTogaWF0YSwgXG5cdFx0XHRpY2FvOiBpY2FvLCBsYXRpdHVkZTogbGF0aXR1ZGUsIGxvbmdpdHVkZTogbG9uZ2l0dWRlfSk7XG5cdH0pXG5cblx0Ly8gdHJhbnNmb3JtIGFycmF5IG9mIG9iamVjdHMgaW50byBzaW5nbGUgb2JqZWN0IHdoZXJlIGtleXMgaXMgdGhlIGFpcnBvcnQgbmFtZVxuXHRjb25zdCBhaXJwb3J0T2JqID0gYWlycG9ydHMucmVkdWNlKChvYmosIGl0ZW0pID0+IE9iamVjdC5hc3NpZ24ob2JqLCB7W2l0ZW0uYWlycG9ydF06aXRlbX0sIHt9KSk7XG5cdC8vY29uc29sZS5sb2coYWlycG9ydE9iaik7IC8vIHNlYXJjaCBmb3IgYWlycG9ydCB1c2luZyBhaXJwb3J0IG5hbWUga2V5LCBjYW4ga2V5IGludG9cblxuXHRpZiAoYWlycG9ydE9ialthaXJwb3J0TmFtZV0pIHtcblx0XHRyZXR1cm4gW2FpcnBvcnRPYmpbYWlycG9ydE5hbWVdLmljYW8sIGFpcnBvcnRPYmpbYWlycG9ydE5hbWVdLmxhdGl0dWRlLCBhaXJwb3J0T2JqW2FpcnBvcnROYW1lXS5sb25naXR1ZGVdO1xuXHR9IGVsc2Uge1xuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cbn1cblxuXG5cblxuIl0sIm5hbWVzIjpbImdldEFpcnBvcnRJbmZvIiwiYWlycG9ydE5hbWUiLCJhaXJwb3J0cyIsInJlcyIsImZldGNoIiwiZGF0YSIsInRleHQiLCJyb3dzIiwic3BsaXQiLCJzbGljZSIsImZvckVhY2giLCJlbGUiLCJyb3ciLCJjb3VudHJ5X2NvZGUiLCJsZW5ndGgiLCJyZWdpb25fbmFtZSIsImlhdGEiLCJpY2FvIiwiYWlycG9ydCIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwicHVzaCIsImFpcnBvcnRPYmoiLCJyZWR1Y2UiLCJvYmoiLCJpdGVtIiwiT2JqZWN0IiwiYXNzaWduIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/airport.js\n");

/***/ }),

/***/ "./src/scripts/flight.js":
/*!*******************************!*\
  !*** ./src/scripts/flight.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateTime: function() { return /* binding */ calculateTime; },\n/* harmony export */   getAircraft: function() { return /* binding */ getAircraft; },\n/* harmony export */   getAirportArrivals: function() { return /* binding */ getAirportArrivals; },\n/* harmony export */   getAirportDepartures: function() { return /* binding */ getAirportDepartures; },\n/* harmony export */   getAllFlights: function() { return /* binding */ getAllFlights; },\n/* harmony export */   getFlightLocation: function() { return /* binding */ getFlightLocation; }\n/* harmony export */ });\nlet allFlights;\nlet arrivalFlights;\nlet departureFlights;\nlet aircraftFlights;\nlet flightLocations;\nconst url = \"https://opensky-network.org/api/flights/\";\n\n// track gives back last reported location of an airplane\nconst getFlightLocation = async function (icao24) {\n  let time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  try {\n    const res = await fetch(`https://opensky-network.org/api/tracks/all?icao24=${icao24}&time=${time}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      const lastLocation = data.path[data.path.length - 1];\n      // console.log(\"Last reported Latitude:\" , lastLocation[1]);\n      // console.log(\"Last reported Longitude:\" , lastLocation[2]);\n      // console.log(data.path);\n      return data.path;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n// Get all flights between time frame < 2 hrs\nconst getAllFlights = async (begin, end) => {\n  // beginning and ending in unix time, seconds since epoch\n  try {\n    const res = await fetch(url + `all?begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      allFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching data', error);\n  }\n};\n\n// Get flight information for aircraft departed and arrived within time frame < 30 days, \nconst getAircraft = async (icao24, begin, end) => {\n  try {\n    const res = await fetch(url + `aircraft?icao24=${icao24}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      aircraftFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching aircraft', error);\n  }\n};\n\n// Get all airport arrivals at specific airport, time frame < 1 week, arrival data from previous day or earlier\nconst getAirportArrivals = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `arrival?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      arrivalFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching arrivals', error);\n  }\n};\n\n// Get all flight depatures at specific airport, time frame < 1 week, ALWAYS UP TO DATE\nconst getAirportDepartures = async (airport, begin, end) => {\n  try {\n    const res = await fetch(url + `departure?airport=${airport}&begin=${begin}&end=${end}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      departureFlights = data;\n      return data;\n    } else {\n      throw new Error('response not ok');\n    }\n  } catch (error) {\n    console.error('Error fetching departures', error);\n  }\n};\n\n// convert user input time\nconst calculateTime = () => {\n  return Math.floor(new Date() / 1000);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/flight.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addMap: function() { return /* binding */ addMap; },\n/* harmony export */   drawPath: function() { return /* binding */ drawPath; }\n/* harmony export */ });\nlet g;\nlet projection;\nconst addMap = (location, icao) => {\n  const height = 600;\n  const width = 800;\n  const svg = d3.select('#map').append('svg').attr('width', width).attr('height', height);\n  g = svg.append('g');\n  const handleZoom = e => {\n    g.attr('transform', e.transform);\n  };\n  let zoom = d3.zoom().scaleExtent([1, 80]).translateExtent([[0, 0], [width, height]]).on('zoom', handleZoom);\n  svg.call(zoom);\n  projection = d3.geoMercator().center([location[0], location[1]]).translate([width / 2, height / 2]).scale(120);\n  zoom.scaleTo(svg, 30);\n  const path = d3.geoPath().projection(projection);\n\n  // const addPath = (coordinates) => {\n  // \tconst lineGenerator = d3.line();\n  // \tlet pathData = lineGenerator(coordinates);\n  // \tg.selectAll('path')\n  // \t\t.data([coordinates])\n  // \t\t.join('path')\n  // \t\t.attr('d',pathData)\n  // }\n\n  d3.json('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json').then(data => {\n    const countries = topojson.feature(data, data.objects.countries);\n    const coordinates = projection(location);\n    g.selectAll('path').data(countries.features).enter().append('path').attr('d', path);\n    g.selectAll('circle').data(location).enter().append('circle').attr('cx', coordinates[0]).attr('cy', coordinates[1]).attr('r', .25).style('fill', '#000000');\n    g.selectAll('text').data(location).enter().append('text').attr('x', coordinates[0] + .5).attr('y', coordinates[1]).text(icao).style('font-size', '1px');\n  });\n};\nconst drawPath = async path => {\n  const waypoints = await path;\n  const coordinates = [];\n  waypoints.forEach(waypoint => {\n    // [time, latitude, longitude, baro_altitude, true_track, on_ground]\n    coordinates.push(projection([waypoint[2], waypoint[1]]));\n  });\n\n  // path using circles\n  // g.selectAll('circle')\n  // \t.data(coordinates)\n  // \t.enter()\n  // \t.append('circle')\n  // \t.attr('cx', d => d[0])\n  // \t.attr('cy', d => d[1])\n  // \t.attr('r', .1)\n  // \t.style('fill', '#ffffff');\n\n  // path using line\n  const lineGenerator = d3.line().x(d => d[0]).y(d => d[1]);\n  g.append('path').data([coordinates]).attr('fill', 'none').attr('stroke', 'add8e6').attr('stroke-width', 0.1).attr('d', lineGenerator);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za3l2aWV3Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;